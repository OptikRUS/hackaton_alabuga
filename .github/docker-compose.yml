services:
  app:
    image: "${DOCKERHUB_USERNAME}/${DOCKERHUB_REPONAME}:latest"
    container_name: "${DOCKERHUB_REPONAME}"
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
      DB_NAME: "${DB_NAME}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_HOST: "${DB_HOST:-postgres}"
      DB_PORT: "${DB_PORT:-5432}"
      MINIO_ENDPOINT: "${MINIO_ENDPOINT:-http://minio:9000}"
    ports:
      - "80:8080"
    labels:
      app: "${DOCKERHUB_REPONAME}"
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8080/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_started

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 10s

  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: "${MINIO_ROOT_USER}"
      MINIO_ROOT_PASSWORD: "${MINIO_ROOT_PASSWORD}"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

networks:
  default:
    name: "${DOCKERHUB_REPONAME}_network"

volumes:
  postgres_data:
  minio_data:

