name: Deploy

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
          script: |
            set -e

            echo "üöÄ –õ–æ–≥–∏–Ω –≤ Docker Hub..."
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ vars.DOCKERHUB_USERNAME }}" --password-stdin

            echo "üì• –û–±–Ω–æ–≤–ª—è–µ–º docker image..."
            docker image pull ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPONAME }}:latest || true

            echo "üîß –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
            export DOCKERHUB_USERNAME="${{ vars.DOCKERHUB_USERNAME }}"
            export DOCKERHUB_REPONAME="${{ vars.DOCKERHUB_REPONAME }}"
            export DB_NAME="${{ secrets.DB_NAME }}"
            export DB_USER="${{ secrets.DB_USER }}"
            export DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
            export DB_HOST="${{ secrets.DB_HOST }}"
            export DB_PORT="${{ secrets.DB_PORT }}"
            export MINIO_ENDPOINT="${{ secrets.MINIO_ENDPOINT }}"

            echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π compose —Å—Ç–µ–∫ (–µ—Å–ª–∏ –µ—Å—Ç—å)..."
            docker compose -f .github/docker-compose.yml down || true

            echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å—Ç–µ–∫ —á–µ—Ä–µ–∑ docker compose (–æ–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏)..."
            docker compose -f .github/docker-compose.yml up -d --pull always --wait --wait-timeout 180

            echo "üßπ –ß–∏—Å—Ç–∏–º dangling images..."
            docker image prune -f

            echo "‚úÖ –î–µ–ø–ª–æ–π —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω!"
            echo "‚è≥ –ñ–¥—ë–º 10 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–Ω—è—Ç–∏–µ–º –ª–æ–≥–æ–≤..."
            sleep 10
            echo "üìã –õ–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
            docker logs ${{ vars.DOCKERHUB_REPONAME }}
