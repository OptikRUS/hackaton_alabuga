name: Deploy

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
          script: |
            set -e

            HEALTHCHECK_RETRIES=10
            HEALTHCHECK_DELAY=10

            echo "üöÄ –õ–æ–≥–∏–Ω –≤ Docker Hub..."
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ vars.DOCKERHUB_USERNAME }}" --password-stdin

            echo "üì• –°–∫–∞—á–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–∑..."
            docker image pull ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPONAME }}:latest

            echo "üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è healthcheck..."
            docker container run -d \
              --name ${{ vars.DOCKERHUB_REPONAME }}_new \
              --label app=${{ vars.DOCKERHUB_REPONAME }} \
              -e TZ=Europe/Moscow \
              -p 8081:8080 \
              -e DB_NAME=${{ secrets.DB_NAME }} \
              -e DB_USER=${{ secrets.DB_USER }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e DB_HOST=${{ secrets.DB_HOST }} \
              -e DB_PORT=${{ secrets.DB_PORT }} \
              -e MINIO_ENDPOINT=${{ secrets.MINIO_ENDPOINT }} \
              -e MINIO_ACCESS_KEY=${{ secrets.MINIO_ACCESS_KEY }} \
              -e MINIO_SECRET_KEY=${{ secrets.MINIO_SECRET_KEY }} \
              -e MINIO_BUCKET=${{ vars.MINIO_BUCKET }} \
              -e MINIO_REGION=${{ vars.MINIO_REGION }} \
              ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPONAME }}

            echo "‚è≥ –ü—Ä–æ–≤–µ—Ä—è–µ–º healthcheck –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
            success=false
            for i in $(seq 1 $HEALTHCHECK_RETRIES); do
              if curl -sSf http://localhost:8081/health > /dev/null; then
                echo "‚úÖ Healthcheck passed!"
                success=true
                break
              else
                echo "‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ $i –Ω–µ—É–¥–∞—á–Ω–∞, –∂–¥—ë–º $HEALTHCHECK_DELAY —Å–µ–∫..."
                sleep $HEALTHCHECK_DELAY
              fi
            done

            if [ "$success" = true ]; then
              echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
              docker container stop ${{ vars.DOCKERHUB_REPONAME }} || true
              docker container rm ${{ vars.DOCKERHUB_REPONAME }} || true

              echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É 80..."
              docker container stop ${{ vars.DOCKERHUB_REPONAME }}_new || true
              docker container rm ${{ vars.DOCKERHUB_REPONAME }}_new || true
              docker container run -d \
                --name ${{ vars.DOCKERHUB_REPONAME }} \
                --label app=${{ vars.DOCKERHUB_REPONAME }} \
                -e TZ=Europe/Moscow \
                -p 80:8080 \
                -e DB_NAME=${{ secrets.DB_NAME }} \
                -e DB_USER=${{ secrets.DB_USER }} \
                -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
                -e DB_HOST=${{ secrets.DB_HOST }} \
                -e DB_PORT=${{ secrets.DB_PORT }} \
                -e MINIO_ENDPOINT=${{ secrets.MINIO_ENDPOINT }} \
                -e MINIO_ACCESS_KEY=${{ secrets.MINIO_ACCESS_KEY }} \
                -e MINIO_SECRET_KEY=${{ secrets.MINIO_SECRET_KEY }} \
                -e MINIO_BUCKET=${{ vars.MINIO_BUCKET }} \
                -e MINIO_REGION=${{ vars.MINIO_REGION }} \
                ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPONAME }}

              echo "üßπ –ß–∏—Å—Ç–∏–º dangling images..."
              docker image prune -f

              echo "‚úÖ –î–µ–ø–ª–æ–π —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω!"
              echo "‚è≥ –ñ–¥—ë–º 10 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–Ω—è—Ç–∏–µ–º –ª–æ–≥–æ–≤..."
              sleep 10
              echo "üìã –õ–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
              docker logs ${{ vars.DOCKERHUB_REPONAME }}

            else
              echo "‚ùå Healthcheck –Ω–µ –ø—Ä–æ—à—ë–ª! –ù–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω."
              echo "‚è≥ –ñ–¥—ë–º 10 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–Ω—è—Ç–∏–µ–º –ª–æ–≥–æ–≤..."
              sleep 10
              echo "üìã –õ–æ–≥–∏ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
              docker logs ${{ vars.DOCKERHUB_REPONAME }}_new

              echo "üßπ –£–¥–∞–ª—è–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ –æ—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Ä–∞–±–æ—Ç–∞—Ç—å..."
              docker container stop ${{ vars.DOCKERHUB_REPONAME }}_new || true
              docker container rm ${{ vars.DOCKERHUB_REPONAME }}_new || true

              if ! docker ps --filter "name=${{ vars.DOCKERHUB_REPONAME }}" --format '{{.Names}}' | grep -q ${{ vars.DOCKERHUB_REPONAME }}; then
                echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
                docker container start ${{ vars.DOCKERHUB_REPONAME }} || true
              fi

              exit 1
            fi