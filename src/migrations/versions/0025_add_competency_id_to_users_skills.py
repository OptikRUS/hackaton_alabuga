import sqlalchemy as sa
from alembic import op

revision = "0025"
down_revision = "0024"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Добавляем competency_id в таблицу users_skills
    op.add_column("users_skills", sa.Column("competency_id", sa.Integer(), nullable=True))

    # Добавляем внешний ключ
    op.create_foreign_key(
        "fk_users_skills_competency_id",
        "users_skills",
        "competencies_competency",
        ["competency_id"],
        ["id"],
        ondelete="CASCADE",
    )

    # Обновляем первичный ключ, чтобы включить competency_id
    op.drop_constraint("pk_users_skills", "users_skills", type_="primary")
    op.create_primary_key(
        "pk_users_skills", "users_skills", ["user_login", "skill_id", "competency_id"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Удаляем первичный ключ
    op.drop_constraint("pk_users_skills", "users_skills", type_="primary")

    # Восстанавливаем старый первичный ключ
    op.create_primary_key("pk_users_skills", "users_skills", ["user_login", "skill_id"])

    # Удаляем внешний ключ
    op.drop_constraint("fk_users_skills_competency_id", "users_skills", type_="foreignkey")

    # Удаляем колонку
    op.drop_column("users_skills", "competency_id")
    # ### end Alembic commands ###
